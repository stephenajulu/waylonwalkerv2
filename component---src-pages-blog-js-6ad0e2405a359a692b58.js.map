{"version":3,"sources":["webpack:///./src/components/blogPostCard.js","webpack:///./src/components/BlogPosts.js","webpack:///./src/pages/blog.js"],"names":["BlogPostCardStyles","styled","div","colors","greys","BlogPostCard","post","dt","Date","frontmatter","date","year","getUTCFullYear","month","toLocaleString","day","getDate","cover","to","aria-label","title","fluid","childImageSharp","className","id","description","BlogPostsStyle","BlogPosts","props","componentDidMount","a","window","addEventListener","handleScroll","incrementMaxEntries","setState","numPosts","state","incrementBy","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","incrementOffset","pageYOffset","setSearch","search","SearchWithFuse","fuse","Fuse","posts","keys","filteredPosts","map","i","item","render","action","htmlFor","type","name","value","this","onChange","e","target","slice","status","toLowerCase","error","key","node","style","display","href","Component","BlogPageStyles","BlogPage","data","allMarkdownRemark","edges","React","pageQuery"],"mappings":"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","file":"component---src-pages-blog-js-6ad0e2405a359a692b58.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\n// import { Link, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport colors from '../components/styles/colors'\r\n\r\nconst BlogPostCardStyles = styled.div`\r\n/* background: rgba(51, 0, 38, .04); */\r\ntransition: width 250ms ease-in-out,\r\n            color 1000ms linear,\r\n            transform 1000ms linear;\r\n  /* align-self: center; */\r\n/* &:hover {\r\n  width: calc(min(550px, 100vw));\r\n  .year{\r\n  color: rgba(108, 99, 253, .14);\r\n  transform: rotate(-1.4deg);\r\n\r\n  } */\r\n\r\n}\r\nbackground: ${colors.greys[1]};\r\nbackground: #3E3846;\r\nbackground: linear-gradient(81deg, rgba(40,44,52,1) 0%, #3E3846 100%);\r\ncolor: white;\r\n\r\noverflow: hidden;\r\n// position: relative;\r\n\r\n/* background: #330026; */\r\ndisplay: block;\r\nmargin: .2rem;\r\nwidth: calc(min(500px, 95vw));\r\n// width: 95%;\r\n// position: relative;\r\nmargin: 2rem;\r\n/* padding: 1rem; */\r\nborder-radius: 2px;\r\nbox-shadow:  -8rem -6rem 8rem -6rem rgba(253, 221, 88, .2), 4rem 0 8rem rgba(88, 82, 185, .3), .2rem .2rem 1rem rgba(0, 0, 0, .2);\r\noverflow: hidden;\r\n// background: rgb(82,81,103);\r\n// background: linear-gradient(97deg, rgba(82,81,103,1) 0%, rgba(62,61,82,1) 100%);\r\n/* @media only screen and (max-width: 500px) {\r\n  width: 95%\r\n} */\r\nimg {\r\n  width: 95%;\r\n}\r\n\r\nh3 {\r\n  color: rgba(255, 255, 255, .8);\r\n  color: hsla(244, 60%, 70%, .7);\r\n  // text-shadow: 0rem 0rem .4rem rgba(255, 255, 255, .5);\r\n  font-size: 1.75rem;\r\n  text-align: center;\r\n  transform: rotate(-1deg);\r\n\r\n\r\n}\r\n\r\n.year {\r\n  // position: absolute;\r\n  // top: 3rem;\r\n  font-size: 5rem;\r\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\r\nUbuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\r\n  font-weight: 900;\r\n  /* color: rgba(0,0,0,.1);\r\n  color: rgba(255, 255, 255, .05); */\r\n  color: rgba(108, 99, 253, .1);\r\n\r\n  text-align: center;\r\n  transform: rotate(.6deg);\r\n}\r\n.month {\r\n  // position: absolute;\r\n  // top: 5rem;\r\n  font-size: 2rem;\r\n  font-family: sans-serif;\r\n  font-weight: 700;\r\n  color: rgba(0,0,0,.5);\r\n  color: rgba(255, 255, 255, .6);\r\n  color: rgba(108, 99, 253, .6);\r\n  text-align: center;\r\n  transform: rotate(2deg);\r\n}\r\n.date {\r\n  margin: 0rem auto;\r\n  padding: 3rem 2rem 2rem;\r\n}\r\n.bottom {\r\n  width: 100%;\r\n  min-height: 6rem;\r\n  position: relative;\r\n  /* border: 1px solid black; */\r\n  background: linear-gradient(97deg, #2A2D34 0%, #3C3745 100%);\r\n  /* background: linear-gradient(81deg, rgba(45,47,54,1) 0%, # 100%); */\r\n  z-index: 99;\r\n\r\n}\r\n\r\np {\r\n  transform: rotate(-.7deg);\r\n}\r\n\r\n`\r\n\r\nconst BlogPostCard = ({ post, ...props }) => {\r\n  const dt = new Date(post.frontmatter.date)\r\n  const year = dt.getUTCFullYear()\r\n  const month = dt.toLocaleString('en-us', { month: 'long' })\r\n  const day = dt.getDate()\r\n  const cover = post.frontmatter.cover\r\n  return (\r\n\r\n    <BlogPostCardStyles>\r\n      <Link to={post['fields']['slug']} aria-label={`${post['frontmatter']['title']} cover image`} title={`${post['frontmatter']['title']}`}>\r\n        {\r\n          (cover === undefined || cover === null)\r\n            ? ''\r\n            : <Img fluid={cover.childImageSharp.fluid} />\r\n        }\r\n      </Link>\r\n      <div className=\"date\">\r\n        <Link to={post['fields']['slug']} aria-label={`${post['frontmatter']['title']} cover image`} title={`${post['frontmatter']['title']}`}>\r\n          <div className=\"year\">{year}</div>\r\n          <div className=\"month\">{month} {day}</div>\r\n        </Link>\r\n      </div>\r\n\r\n      <Link to={post['fields']['slug']} aria-label={`${post['frontmatter']['title']} cover image`} title={`${post['frontmatter']['title']}`}>\r\n        <h3 id={post['frontmatter']['title']}>{post['frontmatter']['title']}</h3>\r\n      </Link>\r\n\r\n      {/* <div className=\"excerpt\" dangerouslySetInnerHTML={{ __html: post.excerpt }} /> */}\r\n      <div className=\"bottom\">\r\n        <p>{post.frontmatter.description}</p>\r\n\r\n      </div>\r\n    </BlogPostCardStyles >\r\n\r\n  )\r\n}\r\n\r\nexport default BlogPostCard\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport BlogPostCard from '../components/blogPostCard'\r\nimport FlipMove from 'react-flip-move'\r\nimport Fuse from 'fuse.js'\r\n\r\nconst BlogPostsStyle = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  align-items: center;\r\n  align-content: center;\r\n  justify-self: center;\r\n  min-height: 100vh;\r\n  width: calc(min(1800px, 90vw));\r\n\r\n  input {\r\n    margin-left: 1rem;\r\n  }\r\n\r\n  img {\r\n    margin: auto;\r\n}\r\n\r\n.post-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.post-wrapper: {\r\n  display: inline-flex;\r\n}\r\n\r\n.robots {\r\n  display: None;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n}\r\n\r\n`\r\n\r\nclass BlogPosts extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      posts: props.posts,\r\n      filteredPosts: props.posts,\r\n      search: '',\r\n      numPosts: 3,\r\n      incrementBy: 9,\r\n      incrementOffset: 2000,\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    window.addEventListener('scroll', this.handleScroll)\r\n\r\n  }\r\n\r\n  incrementMaxEntries = () => {\r\n    this.setState({ numPosts: this.state.numPosts + this.state.incrementBy })\r\n  }\r\n  handleScroll = () => {\r\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - this.state.incrementOffset;\r\n    const windowBottom = windowHeight + window.pageYOffset;\r\n    if (windowBottom >= docHeight) {\r\n      this.incrementMaxEntries()\r\n    }\r\n  }\r\n\r\n  setSearch = search => this.setState({ search }, () => this.SearchWithFuse())\r\n\r\n  SearchWithFuse = () => {\r\n    const fuse = new Fuse(this.state.posts, { keys: ['node.html'] })\r\n    if (this.state.search === \"\") {\r\n      this.setState({ filteredPosts: this.state.posts })\r\n    } else {\r\n      this.setState({ filteredPosts: fuse.search(this.state.search).map(i => i.item) })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      < BlogPostsStyle >\r\n        <form action=\"\">\r\n          <label htmlFor=\"search\">Search:\r\n            <input type=\"text\" name=\"search\" value={this.state.search} id=\"search\" onChange={e => this.setSearch(e.target.value)} />\r\n          </label>\r\n        </form>\r\n        <FlipMove className='post-cards'>\r\n          {\r\n            this.state.filteredPosts\r\n              .slice(0, this.state.numPosts)\r\n              .map((post, i) => {\r\n                let status = true\r\n                try {\r\n                  status = post['node']['frontmatter']['status'].toLowerCase() !== 'draft'\r\n                } catch (error) {\r\n                }\r\n                if (post && status) {\r\n                  return <div key={post.node.id} className='post-wrapper' style={{ display: 'inline-flex' }}>< BlogPostCard key={post.node.id} post={post['node']} /></div>\r\n                }\r\n                return false\r\n              }\r\n              )\r\n          }\r\n          < div className=\"robots\">\r\n            {this.state.posts.map((post, i) => <li><h3 id={`${post.node.frontmatter.title}-robot`}>{post.node.frontmatter.title}</h3><div className=\"description\">{post.node.frontmatter.description}</div><a href={post.node['fields']['slug']} title={post.node.frontmatter.title}>{post.node.frontmatter.title}</a></li>)}\r\n          </div>\r\n        </FlipMove>\r\n      </ BlogPostsStyle >\r\n\r\n    )\r\n  }\r\n}\r\nexport default BlogPosts\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n// import PropTypes from 'prop-types'\r\n// import { Link, graphql } from 'gatsby'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport BlogPosts from '../components/BlogPosts'\r\n// import BlogGallery from '../components/BlogGallery'\r\n// import chroma from 'chroma-js'\r\n\r\nconst BlogPageStyles = styled.div`\r\nwidth: calc(min(1000px, 95vw));\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-direction: column;\r\nmargin: auto;\r\ncolor: #e6ddeb;\r\n\r\nh1 {\r\n  /* color: #f9f7fa; */\r\n  text-align: center;\r\n}\r\np {\r\n  color: whitesmoke;\r\n  padding: 1rem;\r\n  margin: 3rem auto;\r\n  max-width: 500px;\r\n}\r\n`\r\n\r\n\r\nexport default class BlogPage extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const { edges: posts } = data.allMarkdownRemark\r\n    // console.log(data.allMarkdownRemark)\r\n    // console.log(posts)\r\n    // console.log(data.allMarkdownRemark)\r\n    // console.log('posts: ', posts)\r\n\r\n    return (\r\n      <Layout>\r\n        <BlogPageStyles>\r\n          <h1>Blog Posts</h1>\r\n          <p>\r\n            I am always learning something, including blogging/writing skills.  I try to share my experiences here. Much of it is random things form my career.\r\n          </p>\r\n          <BlogPosts posts={posts} />\r\n        </BlogPageStyles>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\nquery BlogQuery {\r\n  allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }, filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }) {\r\n    edges {\r\n      node {\r\n        excerpt(pruneLength: 400)\r\n        html\r\n        id\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          templateKey\r\n          status\r\n          description\r\n          cover {\r\n            absolutePath\r\n            childImageSharp {\r\n              fixed(width: 500, height: 210) {\r\n                ...GatsbyImageSharpFixed\r\n              },\r\n              fluid {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n\r\n          date\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n"],"sourceRoot":""}