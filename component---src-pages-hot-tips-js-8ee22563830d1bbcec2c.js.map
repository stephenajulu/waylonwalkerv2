{"version":3,"sources":["webpack:///./src/components/HotTips.js","webpack:///./src/pages/hot-tips.js"],"names":["HotTipsStyle","styled","div","HotTips","props","componentDidMount","a","window","addEventListener","handleScroll","incrementMaxEntries","setState","numPosts","state","incrementBy","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","incrementOffset","pageYOffset","setSearch","search","SearchWithFuse","fuse","Fuse","posts","keys","filteredPosts","map","i","item","render","action","htmlFor","type","name","value","this","id","onChange","e","target","className","slice","post","key","node","style","display","Tip","frontmatter","content","plainText","fileAbsolutePath","Component","HotTipsStyles","BlogPage","data","allMarkdownRemark","edges","React","HotTipsQuery"],"mappings":"0oBAMA,IAAMA,EAAeC,IAAOC,IAAV,wEAAGD,CAAH,yXA4GHE,E,oBArEb,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAWFC,kBAZmB,YAYC,sBAAAC,EAAA,sDAClBC,OAAOC,iBAAiB,SAAU,EAAKC,cADrB,2CAZD,EAiBnBC,oBAAsB,WACpB,EAAKC,SAAS,CAAEC,SAAU,EAAKC,MAAMD,SAAW,EAAKC,MAAMC,eAlB1C,EAoBnBL,aAAe,WACb,IAAMM,EAAe,gBAAiBR,OAASA,OAAOS,YAAcC,SAASC,gBAAgBC,aACvFC,EAAOH,SAASG,KAChBC,EAAOJ,SAASC,gBAChBI,EAAYC,KAAKC,IAAIJ,EAAKK,aAAcL,EAAKD,aAAcE,EAAKK,aAAcL,EAAKI,aAAcJ,EAAKF,cAAgB,EAAKN,MAAMc,gBAClHZ,EAAeR,OAAOqB,aACvBN,GAClB,EAAKZ,uBA3BU,EA+BnBmB,UAAY,SAAAC,GAAM,OAAI,EAAKnB,SAAS,CAAEmB,WAAU,kBAAM,EAAKC,qBA/BxC,EAiCnBA,eAAiB,WACf,IAAMC,EAAO,IAAIC,IAAK,EAAKpB,MAAMqB,MAAO,CAAEC,KAAM,CAAC,eACvB,KAAtB,EAAKtB,MAAMiB,OACb,EAAKnB,SAAS,CAAEyB,cAAe,EAAKvB,MAAMqB,QAE1C,EAAKvB,SAAS,CAAEyB,cAAeJ,EAAKF,OAAO,EAAKjB,MAAMiB,QAAQO,KAAI,SAAAC,GAAC,OAAIA,EAAEC,WApC3E,EAAK1B,MAAQ,CACXqB,MAAO9B,EAAM8B,MACbE,cAAehC,EAAM8B,MACrBJ,OAAQ,GACRlB,SAAU,EACVE,YAAa,EACba,gBAAiB,KARF,E,0GA0CnBa,OAAA,WAAU,IAAD,OACP,OAEE,kBAAExC,EAAF,KACE,0BAAMyC,OAAO,IACX,2BAAOC,QAAQ,UAAf,UACE,2BAAOC,KAAK,OAAOC,KAAK,SAASC,MAAOC,KAAKjC,MAAMiB,OAAQiB,GAAG,SAASC,SAAU,SAAAC,GAAC,OAAI,EAAKpB,UAAUoB,EAAEC,OAAOL,YAGlH,kBAAC,IAAD,CAAUM,UAAU,cAEhBL,KAAKjC,MAAMuB,cACRgB,MAAM,EAAGN,KAAKjC,MAAMD,UACpByB,KAAI,SAACgB,EAAMf,GACV,OAAO,yBAAKgB,IAAKD,EAAKE,KAAKR,GAAII,UAAU,eAAeK,MAAO,CAAEC,QAAS,gBAAiB,kBAAEC,EAAA,EAAF,CAAMJ,IAAKD,EAAKE,KAAKR,GAAIY,YAAaN,EAAKE,KAAKI,YAAatC,KAAMgC,EAAKE,KAAKlC,KAAMuC,QAASP,EAAKE,KAAKM,UAAWC,iBAAkBT,EAAKE,KAAKO,0B,GAzDlOC,aCtCtB,IAAMC,EAAgB/D,IAAOC,IAAV,0EAAGD,CAAH,MAGEgE,E,gLACnBzB,OAAA,WAAU,IAEON,EADEY,KAAK1C,MAAd8D,KACsBC,kBAAtBC,MAER,OACE,kBAAC,IAAD,KACE,kBAACJ,EAAD,KACE,wCACA,kBAAC,EAAD,CAAS9B,MAAOA,O,GATYmC,IAAMN,WAgB/BO,EAAY","file":"component---src-pages-hot-tips-js-8ee22563830d1bbcec2c.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Tip from '../components/Tip'\r\nimport FlipMove from 'react-flip-move'\r\nimport Fuse from 'fuse.js'\r\n\r\nconst HotTipsStyle = styled.div`\r\n  display: flex;\r\n  margin: auto;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  align-items: center;\r\n  align-content: center;\r\n  justify-self: center;\r\n  min-height: 100vh;\r\n  width: calc(min(1800px, 90vw));\r\n\r\n  input {\r\n    margin-left: 1rem;\r\n  }\r\n\r\n  img {\r\n    margin: auto;\r\n}\r\n\r\n.post-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.post-wrapper: {\r\n  display: inline-flex;\r\n}\r\n\r\n.robots {\r\n  display: None;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n}\r\n\r\n`\r\n\r\nclass HotTips extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      posts: props.posts,\r\n      filteredPosts: props.posts,\r\n      search: '',\r\n      numPosts: 3,\r\n      incrementBy: 9,\r\n      incrementOffset: 2000,\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    window.addEventListener('scroll', this.handleScroll)\r\n\r\n  }\r\n\r\n  incrementMaxEntries = () => {\r\n    this.setState({ numPosts: this.state.numPosts + this.state.incrementBy })\r\n  }\r\n  handleScroll = () => {\r\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - this.state.incrementOffset;\r\n    const windowBottom = windowHeight + window.pageYOffset;\r\n    if (windowBottom >= docHeight) {\r\n      this.incrementMaxEntries()\r\n    }\r\n  }\r\n\r\n  setSearch = search => this.setState({ search }, () => this.SearchWithFuse())\r\n\r\n  SearchWithFuse = () => {\r\n    const fuse = new Fuse(this.state.posts, { keys: ['node.html'] })\r\n    if (this.state.search === \"\") {\r\n      this.setState({ filteredPosts: this.state.posts })\r\n    } else {\r\n      this.setState({ filteredPosts: fuse.search(this.state.search).map(i => i.item) })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      < HotTipsStyle >\r\n        <form action=\"\">\r\n          <label htmlFor=\"search\">Search:\r\n            <input type=\"text\" name=\"search\" value={this.state.search} id=\"search\" onChange={e => this.setSearch(e.target.value)} />\r\n          </label>\r\n        </form>\r\n        <FlipMove className='post-cards'>\r\n          {\r\n            this.state.filteredPosts\r\n              .slice(0, this.state.numPosts)\r\n              .map((post, i) => {\r\n                return <div key={post.node.id} className='post-wrapper' style={{ display: 'inline-flex' }}>< Tip key={post.node.id} frontmatter={post.node.frontmatter} html={post.node.html} content={post.node.plainText} fileAbsolutePath={post.node.fileAbsolutePath} /></div>\r\n              }\r\n              )\r\n          }\r\n          {/* < div className=\"robots\">\r\n            {this.state.posts.map((post, i) => <li><h3 id={`${post.node.frontmatter.title}-robot`}>{post.node.frontmatter.title}</h3><div className=\"description\">{post.node.frontmatter.description}</div><a href={post.node['fields']['slug']} title={post.node.frontmatter.title}>{post.node.frontmatter.title}</a></li>)}\r\n          </div> */}\r\n        </FlipMove>\r\n      </ HotTipsStyle >\r\n\r\n    )\r\n  }\r\n}\r\nexport default HotTips\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport HotTips from '../components/HotTips'\r\n\r\nconst HotTipsStyles = styled.div`\r\n`\r\n\r\nexport default class BlogPage extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const { edges: posts } = data.allMarkdownRemark\r\n\r\n    return (\r\n      <Layout>\r\n        <HotTipsStyles>\r\n          <h1>Hot Tips</h1>\r\n          <HotTips posts={posts} />\r\n        </HotTipsStyles>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const HotTipsQuery = graphql`\r\nquery HotTipsQuery {\r\n  allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }, filter: { frontmatter: { templateKey: { eq: \"hot-tip\" } } }) {\r\n    edges {\r\n      node {\r\n        html\r\n        plainText\r\n        id\r\n        fileAbsolutePath\r\n        frontmatter {\r\n        date\r\n        tags\r\n        afterImage\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n"],"sourceRoot":""}